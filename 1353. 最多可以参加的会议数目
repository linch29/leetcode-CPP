static bool cmp( const vector<int>& a, const vector<int>& b) {
    if (a[0]==b[0]) return a[1]<b[1];
    else return a[0]<b[0];
}
class Solution {
public:
    int maxEvents(vector<vector<int>>& events) {
        sort(events.begin(), events.end(),cmp);
        int day = 1;
        int ans = 0;
        priority_queue<int,vector<int>,greater<int>> pq;
        for (int i=0; i<events.size(); ) {
            if (day>=events[i][0]) {
                pq.push(events[i][1]);
                i++;
                continue;
            }
            //所有开始时间>=day的都入优先队列了。

            while (!pq.empty() && day>pq.top()) {
                pq.pop();
            }
            if (!pq.empty()) {
                pq.pop();
                ans++;
            }
            day++;
        }
        while (!pq.empty()) {
            if (day>pq.top()) {
                pq.pop();
                continue;
            }
            pq.pop();
            ans++;
            day++;
        }
        return ans;
    }
};
