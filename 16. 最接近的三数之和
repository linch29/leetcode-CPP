排序 双指针

class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int diff = INT_MAX;
        int ans;
        int n = nums.size();
        int left, right, temp;
        sort(nums.begin(),nums.end());
        for (int i=0; i<n-2; i++) {
            left = i+1, right = n-1;
            temp = target - nums[i];
            while (left<right) {
                if (nums[left]+nums[right]<temp) {
                    if (abs(temp-nums[left]-nums[right])<diff) {
                        diff = abs(temp-nums[left]-nums[right]);
                        ans = nums[i]+nums[left]+nums[right];
                    }
                    left++;
                }
                else {
                    if (abs(temp-nums[left]-nums[right])<diff) {
                        diff = abs(temp-nums[left]-nums[right]);
                        ans = nums[i]+nums[left]+nums[right];
                    }
                    right--;
                    }
                }
        }
        return ans;
    }
};
