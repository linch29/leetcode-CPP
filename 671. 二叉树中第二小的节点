/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    stack<TreeNode*> ss;
    vector<int> res;
    vector<int> lopp;
    int findSecondMinimumValue(TreeNode* root) {
        ss.push(root);
        while (!ss.empty()) {
            int lop = ss.size();
            lopp.clear();
            while (lop--) {
                TreeNode* tree = ss.top(); ss.pop();
                lopp.push_back(tree->val);
                if (tree->left) ss.push(tree->left);
                if (tree->right) ss.push(tree->right);
            }
            res.insert(res.end(),lopp.begin(),lopp.end());
        }
        sort(res.begin(),res.end());
        for (int i=0; i<res.size()-1; i++) {
            if (res[i+1]>res[i]) return res[i+1];
        }
        return -1;
    }
};
