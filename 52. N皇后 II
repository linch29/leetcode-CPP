借助51题，运用对称性减少一半运算

class Solution {
public:
    int ans;
    int totalNQueens(int n) {
        string initrow;
        for (int i=0; i<n; i++) {
            initrow += '.';
        }
        vector<string> cur(n,initrow);
        int duiyou = n/2;
        for (int i=0; i<duiyou; i++) {
            cur[0][i] = 'Q';
            dfs(0,cur);
            cur[0][i] = '.';
        }
        if (n%2==0) {
            return ans*2;
        }
        else {
            int temp = ans;
            cur[0][n/2] = 'Q';
            dfs(0,cur);
            return ans+temp;
        }
    }

    void dfs(int curi, vector<string>& cur) {
        int n = cur.size();
        if (curi==n-1) {
            ans++;
            return;
        }
        for (int j=0; j<n;j++) {
            if (check(cur,curi+1,j)) {
                cur[curi+1][j] = 'Q';
                dfs(curi+1,cur);
                cur[curi+1][j] = '.';
            }
        }
    }

    bool check(vector<string>& cur, int i, int j) {
        int n = cur.size();
        for (int row=0; row<i; row++) {
            if (cur[row][j]=='Q') return false;
        }
        int zuoshangstep = min(i,j);
        int step = zuoshangstep+1;
        int starti = i-step, startj = j-step;
        for (int times=0; times<step-1; times++) {
            starti++; startj++;
            if (cur[starti][startj]=='Q') return false;
        }

        int youshangstep = min(i,n-1-j);
        step = youshangstep+1;
        starti = i-step, startj = j+step;
        for (int times=0; times<step-1; times++) {
            starti++; startj--;
            if (cur[starti][startj]=='Q') return false;
        }
        return true;
    }
};
