bool cmp(const vector<int>& a, const vector<int>& b) {
    return a[1]<b[1];
}
class Solution {
public:
    int scheduleCourse(vector<vector<int>>& courses) {
        sort(courses.begin(), courses.end(), cmp);
        priority_queue<int> pq;
        int day = 0;
        for (int i=0; i<courses.size(); i++) {
            day += courses[i][0];
            pq.push(courses[i][0]);
            if (day > courses[i][1]) {
                int diu = pq.top(); pq.pop();
                day -= diu;
            }
        }
        return pq.size();
    }
};
