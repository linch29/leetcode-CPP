First version: DP(236ms)

class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {        
        if(nums.empty() || nums.size()==0)  return 0;
        
        int n=nums.size(), ans=1;        
        vector<int>dp(n,0);
        dp[0]= 1;
        
        for(int i=1; i<n; i++) {
            int size=0;
            for(int j=0; j<i; j++) {
                if(nums[j]<nums[i])
                    size= max(size, dp[j]);
            }
            dp[i]=size+1;
            ans= max(ans,dp[i]);
        }        
        return ans;
    }
};

Sencond version: (16ms)

class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        vector<int> res;
        for (auto e:nums){
            if (res.size() == 0) res.push_back(e);
            else if (e>res.back()) res.push_back(e);
            else {
                int n = res.size();
                for(int i=0; i<n;i++){
                    if (res[i]>=e) {
                        res[i] = e;
                        break;
                    }
                }
            }
        }
        return res.size();
    }
};


Third version:
