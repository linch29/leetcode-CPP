class Solution {
public:
    string longestPalindrome(string s) {
        int n = s.size();
        if (n==0) return "";
        vector<vector<bool>> dp(n,vector<bool>(n,false));
        int length = 1;
        int start = 0;
        for (int i=0; i<n; i++) {
            dp[i][i] = true;
        }
        for (int i=0; i<n-1; i++) {
            if (s[i]==s[i+1]) {
                dp[i][i+1] = true;
                if (2>length) {
                    length = 2;
                    start = i;
                }
            }
        }
        for (int k=2; k<n; k++) {
            for (int i=0; i+k<n; i++) {
                if (s[i]==s[i+k] && dp[i+1][i+k-1]) {
                    dp[i][i+k] = true;
                    if (k+1>length) {
                        length = k+1;
                        start = i;
                    }
                }
            }
        }
        return s.substr(start,length);


    }
};
