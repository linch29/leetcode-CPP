后序递归

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if ((!head) || (!head->next)) return head;
        ListNode* res = reverseList(head->next);
        head->next->next = head;
        head->next = nullptr;
        return res;
    }
};

前序递归

class Solution {
public:
    ListNode* reverse(ListNode* head, ListNode* prev) {
        if (!head) return prev;
        ListNode* next = head->next;
        head->next = prev;
        return reverse(next,head);
    }
    
    ListNode* reverseList(ListNode* head) {
        return reverse(head,nullptr);
    }
};

迭代

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* cur = head;
        ListNode* pre = nullptr;
        ListNode* next;
        while (cur) {
            next = cur->next;
            cur->next = pre;
            pre = cur;
            cur = next;
        }
        return pre;
    }
};
