/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* rebuild(vector<int>& preorder, int pre_lf, int pre_rt, vector<int>& inorder, int in_lf, int in_rt)
    {
        if(pre_lf > pre_rt) return nullptr;
        
        TreeNode* root = new TreeNode(preorder[pre_lf]);

        for(int i = in_lf; i<=in_rt; i++){
            if(inorder[i] == root->val){
                root->left = rebuild(preorder,pre_lf+1,i-in_lf+pre_lf, inorder,in_lf,i-1);
                root->right = rebuild(preorder,i-in_lf+pre_lf+1,pre_rt, inorder,i+1,in_rt);
                break;
            }
        }
        return root;
    }

    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        return rebuild(preorder, 0, preorder.size()-1, inorder, 0, inorder.size()-1);
    }
};
