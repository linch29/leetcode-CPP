/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> deeps;
    int maxDepth(TreeNode* root) {
        if (!root) return 0;
        dfs(root,1);
        return *max_element(deeps.begin(),deeps.end());
    }
    void dfs(TreeNode* tree, int deep) {
        deeps.push_back(deep);
        if (tree->left) dfs(tree->left, deep+1);
        if (tree->right) dfs(tree->right, deep+1);
    }
};
