/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/
class Solution {
public:
    Node* copyRandomList(Node* head) {
        map<Node*,Node*> mp;
        mp[nullptr] = nullptr;
        Node* dummy = new Node(-1);
        dummy->next = dfs(head,mp);
        return dummy->next;
    }

    Node* dfs(Node* head, map<Node*,Node*>& mp) {
        if (mp.count(head)) return mp[head];
        else {
            mp[head] = new Node(head->val);
            mp[head]->next = dfs(head->next,mp);
            mp[head]->random = dfs(head->random,mp);
            return mp[head];
        }
    }
};
